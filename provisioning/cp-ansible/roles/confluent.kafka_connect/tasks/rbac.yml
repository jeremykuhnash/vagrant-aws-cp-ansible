---
- name: RBAC Setup Tasks
  include_tasks: ../../tasks/rbac_setup.yml
  vars:
    user: "{{kafka_connect_user}}"
    group: "{{kafka_connect_group}}"

- name: Grant role System Admin to Additional Connect Super Users
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{item}}/roles/SystemAdmin"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "clusters": {
          "kafka-cluster": "{{kafka_cluster_id}}",
          "connect-cluster": "{{kafka_connect.properties['group.id']}}"
        }
      }
    status_code: 204
  loop: "{{kafka_connect_additional_system_admins}}"

- name: Grant role Security Admin to Connect user
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/SecurityAdmin"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "clusters": {
          "kafka-cluster": "{{kafka_cluster_id}}",
          "connect-cluster": "{{kafka_connect.properties['group.id']}}"
        }
      }
    status_code: 204

- name: Grant Connect User ResourceOwner on Connect Topics and Group
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "scope": {
          "clusters": {
            "kafka-cluster":"{{kafka_cluster_id}}"}},
            "resourcePatterns": [
              {
                "resourceType":"Group",
                "name":"{{kafka_connect.properties['group.id']}}",
                "patternType":"LITERAL"
              },
              {
                "resourceType":"Topic",
                "name":"{{kafka_connect.properties['config.storage.topic']}}",
                "patternType":"LITERAL"
              },
              {
                "resourceType":"Topic",
                "name":"{{kafka_connect.properties['offset.storage.topic']}}",
                "patternType":"LITERAL"
              },
              {
                "resourceType":"Topic",
                "name":"{{kafka_connect.properties['status.storage.topic']}}",
                "patternType":"LITERAL"
              }
            ]
          }
        }
      }
    status_code: 204

# TODO the move hardcoded vars into vars
- name: Grant Connect User ResourceOwner on Secret Registry Topic and Group
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "scope": {
          "clusters": {
            "kafka-cluster":"{{kafka_cluster_id}}"}},
            "resourcePatterns": [
              {
                "resourceType":"Group",
                "name":"secret-registry",
                "patternType":"LITERAL"
              },
              {
                "resourceType":"Topic",
                "name":"_confluent-secrets",
                "patternType":"LITERAL"
              }
            ]
          }
        }
      }
    status_code: 204
  when: kafka_connect_secret_registry_enabled|bool
